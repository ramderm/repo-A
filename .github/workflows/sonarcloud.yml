name: SonarCloud analysis

on:
  push:
    branches: "**"
  pull_request:
    branches: "**"
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonarscanner
        uses: actions/cache@v2
        with:
          path: ~/.sonar/scanner-cli
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonarscanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.sonar
          curl -sSLo ~/.sonar/sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip -o ~/.sonar/sonar-scanner-cli.zip -d ~/.sonar/
          mv ~/.sonar/sonar-scanner-4.6.2.2472-linux ~/.sonar/scanner-cli

      - name: Add SonarCloud scanner to PATH
        run: echo "$HOME/.sonar/scanner-cli/bin" >> $GITHUB_PATH

      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION_KEY }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          projectBaseDir: .
